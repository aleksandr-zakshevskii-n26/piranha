[[rules]]
name = "ytgst_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @p1o3_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ytgst_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @arpz_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @arpz_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@p1o3_flag_alias")

 )
"""
holes = ["p1o3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ytgst_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @gd24_flag_alias
                )
            )
            (simple_identifier) @gd24_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @gd24_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@arpz_flag_alias")

 )
"""
holes = ["arpz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "goloi_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @zqea_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "goloi_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @f9cm_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @f9cm_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@zqea_flag_alias")

 )
"""
holes = ["zqea_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "goloi_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@f9cm_flag_alias")

 )
"""
holes = ["f9cm_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "fiwqt_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @rmwu_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "fiwqt_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ykma_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ykma_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@rmwu_flag_alias")

 )
"""
holes = ["rmwu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "fiwqt_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ykma_flag_alias")

 )
"""
holes = ["ykma_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "vxpuq_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @z5wb_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "vxpuq_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @lclm_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @lclm_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@z5wb_flag_alias")

 )
"""
holes = ["z5wb_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "idbhc_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @w4tz_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "idbhc_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @kqc0_flag_alias
                )
            )
            (simple_identifier) @kqc0_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @kqc0_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @kqc0_flag_alias "^is.*|^should.*")
    (#not-match? @kqc0_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@w4tz_flag_alias")

 )
"""
holes = ["w4tz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "id8fl_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @ootm_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "id8fl_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @suu0_flag_alias
                )
            )
            (simple_identifier) @suu0_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @suu0_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @suu0_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ootm_flag_alias")

 )
"""
holes = ["ootm_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "jxxay_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @s9io_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jxxay_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ynun_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@s9io_flag_alias")

 )
"""
holes = ["s9io_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "jxxay_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @lczx_flag_alias
                )
            )
            (simple_identifier) @lczx_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @lczx_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ynun_flag_alias")

 )
"""
holes = ["ynun_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "cbyjw_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @epo8_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "cbyjw_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @eqq6_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@epo8_flag_alias")

 )
"""
holes = ["epo8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "cbyjw_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @bcjx_flag_alias
                )
            )
            (simple_identifier) @bcjx_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @bcjx_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @bcjx_flag_alias "^is.*|^should.*")
    (#not-match? @bcjx_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@eqq6_flag_alias")

 )
"""
holes = ["eqq6_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "xnjf2_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @fnxq_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xnjf2_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @tqv5_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@fnxq_flag_alias")

 )
"""
holes = ["fnxq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "xnjf2_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @vxmu_flag_alias
                )
            )
            (simple_identifier) @vxmu_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @vxmu_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @vxmu_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@tqv5_flag_alias")

 )
"""
holes = ["tqv5_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "dxums_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @exip_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dxums_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @p0ec_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@exip_flag_alias")

 )
"""
holes = ["exip_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "aukkj_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @pon6_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "aukkj_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@pon6_flag_alias")

 )
"""
holes = ["pon6_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "ayhas_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @t7jg_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ayhas_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @vs5r_flag_alias
                )
            )
            (simple_identifier) @vs5r_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @vs5r_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@t7jg_flag_alias")

 )
"""
holes = ["t7jg_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "kl9ry_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @nc53_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "tnd41_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @otgf_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tnd41_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ljzm_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ljzm_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@otgf_flag_alias")

 )
"""
holes = ["otgf_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "tnd41_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @d7tg_flag_alias
                )
            )
            (simple_identifier) @d7tg_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @d7tg_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ljzm_flag_alias")

 )
"""
holes = ["ljzm_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "jt85p_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @pqg9_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jt85p_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @vemw_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @vemw_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@pqg9_flag_alias")

 )
"""
holes = ["pqg9_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "jt85p_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@vemw_flag_alias")

 )
"""
holes = ["vemw_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "xb9an_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @vumi_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xb9an_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ykig_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ykig_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@vumi_flag_alias")

 )
"""
holes = ["vumi_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "xb9an_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ykig_flag_alias")

 )
"""
holes = ["ykig_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "a6b04_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @cqhb_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "a6b04_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @kzfj_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @kzfj_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@cqhb_flag_alias")

 )
"""
holes = ["cqhb_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "yh4sl_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @uivq_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "yh4sl_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @tzmr_flag_alias
                )
            )
            (simple_identifier) @tzmr_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @tzmr_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@uivq_flag_alias")

 )
"""
holes = ["uivq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "qoxv6_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @eu9e_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "qoxv6_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @wbws_flag_alias
                )
            )
            (simple_identifier) @wbws_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @wbws_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @wbws_flag_alias "^is.*|^should.*")
    (#not-match? @wbws_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@eu9e_flag_alias")

 )
"""
holes = ["eu9e_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "bbhvv_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @km39_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "bbhvv_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @aqwn_flag_alias
                )
            )
            (simple_identifier) @aqwn_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @aqwn_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @aqwn_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@km39_flag_alias")

 )
"""
holes = ["km39_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "ts6ki_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @pndb_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "property_declaration"
replace = ""

[[rules]]
name = "nxkgk_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ohpp_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ohpp_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "nxkgk_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @fyz1_flag_alias
                )
            )
            (simple_identifier) @fyz1_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @fyz1_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ohpp_flag_alias")

 )
"""
holes = ["ohpp_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "eclq7_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @jvvn_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @jvvn_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "eclq7_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@jvvn_flag_alias")

 )
"""
holes = ["jvvn_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "qgdl5_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @r37g_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @r37g_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "qgdl5_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@r37g_flag_alias")

 )
"""
holes = ["r37g_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "wqw50_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @i0ey_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @i0ey_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "tudra_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @ijzn_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tudra_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @vsvz_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @vsvz_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@ijzn_flag_alias")

 )
"""
holes = ["ijzn_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "tudra_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @szmw_flag_alias
                )
            )
            (simple_identifier) @szmw_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @szmw_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@vsvz_flag_alias")

 )
"""
holes = ["vsvz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "uzk6d_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @g3xa_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "uzk6d_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @gmnw_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @gmnw_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@g3xa_flag_alias")

 )
"""
holes = ["g3xa_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "uzk6d_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@gmnw_flag_alias")

 )
"""
holes = ["gmnw_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "b9lej_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @pp8f_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "b9lej_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @mu9u_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @mu9u_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@pp8f_flag_alias")

 )
"""
holes = ["pp8f_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "b9lej_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@mu9u_flag_alias")

 )
"""
holes = ["mu9u_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "ldke9_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @qlw8_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ldke9_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @dxz9_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @dxz9_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@qlw8_flag_alias")

 )
"""
holes = ["qlw8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "t6qqj_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @cdy8_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "t6qqj_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ii4e_flag_alias
                )
            )
            (simple_identifier) @ii4e_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ii4e_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@cdy8_flag_alias")

 )
"""
holes = ["cdy8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "kltcv_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @ysfw_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "kltcv_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @h8pu_flag_alias
                )
            )
            (simple_identifier) @h8pu_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @h8pu_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @h8pu_flag_alias "^is.*|^should.*")
    (#not-match? @h8pu_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ysfw_flag_alias")

 )
"""
holes = ["ysfw_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "riscq_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @lf6j_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "riscq_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @chx5_flag_alias
                )
            )
            (simple_identifier) @chx5_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @chx5_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @chx5_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@lf6j_flag_alias")

 )
"""
holes = ["lf6j_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "ylcny_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @nhjs_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ylcny_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@nhjs_flag_alias")

 )
"""
holes = ["nhjs_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "cni9y_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @wd1y_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "object_declaration"
replace = ""

[[rules]]
name = "cyti8_expression_invocation_positive__literal"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @p0wq_flag_alias
                )
            )
            (simple_identifier) @p0wq_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) @p0wq_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @p0wq_flag_alias "^is.*|^should.*")
    (#not-match? @p0wq_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "w065l_expression_invocation_negative__literal"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @gf8c_flag_alias
                )
            )
            (simple_identifier) @gf8c_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) @gf8c_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @gf8c_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "foryu_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @irbu_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "foryu_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ghe9_flag_alias
                )
            )
            (simple_identifier) @ghe9_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ghe9_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@irbu_flag_alias")

 )
"""
holes = ["irbu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "nqpeg_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ntrp_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "nqpeg_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @hzai_flag_alias
                )
            )
            (simple_identifier) @hzai_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @hzai_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @hzai_flag_alias "^is.*|^should.*")
    (#not-match? @hzai_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ntrp_flag_alias")

 )
"""
holes = ["ntrp_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "b0stt_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @lvh8_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "b0stt_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @qtqi_flag_alias
                )
            )
            (simple_identifier) @qtqi_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @qtqi_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @qtqi_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@lvh8_flag_alias")

 )
"""
holes = ["lvh8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "jvuat_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @w1pg_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "kirbn_enum"
query = """
(
     (enum_entry
        (simple_identifier) @ypkx_flag_alias
    ) @enum_entry

(#eq? @ypkx_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "kirbn_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @v9ad_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@ypkx_flag_alias")

 )
"""
holes = ["ypkx_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "kirbn_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @zqmr_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @zqmr_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@v9ad_flag_alias")

 )
"""
holes = ["v9ad_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "kirbn_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @uc8u_flag_alias
                )
            )
            (simple_identifier) @uc8u_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @uc8u_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@zqmr_flag_alias")

 )
"""
holes = ["zqmr_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "l4kub_enum"
query = """
(
     (enum_entry
        (simple_identifier) @lffl_flag_alias
    ) @enum_entry

(#eq? @lffl_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "l4kub_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @hxhn_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@lffl_flag_alias")

 )
"""
holes = ["lffl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "l4kub_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @idif_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @idif_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@hxhn_flag_alias")

 )
"""
holes = ["hxhn_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "l4kub_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@idif_flag_alias")

 )
"""
holes = ["idif_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "ua5us_enum"
query = """
(
     (enum_entry
        (simple_identifier) @gxe9_flag_alias
    ) @enum_entry

(#eq? @gxe9_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ua5us_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @xeeu_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@gxe9_flag_alias")

 )
"""
holes = ["gxe9_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ua5us_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @yet8_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @yet8_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@xeeu_flag_alias")

 )
"""
holes = ["xeeu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ua5us_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@yet8_flag_alias")

 )
"""
holes = ["yet8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "asn0d_enum"
query = """
(
     (enum_entry
        (simple_identifier) @vljo_flag_alias
    ) @enum_entry

(#eq? @vljo_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "asn0d_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @ngwg_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@vljo_flag_alias")

 )
"""
holes = ["vljo_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "asn0d_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @tynz_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @tynz_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@ngwg_flag_alias")

 )
"""
holes = ["ngwg_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "cvjbu_enum"
query = """
(
     (enum_entry
        (simple_identifier) @vvxi_flag_alias
    ) @enum_entry

(#eq? @vvxi_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "cvjbu_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @lozh_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@vvxi_flag_alias")

 )
"""
holes = ["vvxi_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "cvjbu_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @bhvi_flag_alias
                )
            )
            (simple_identifier) @bhvi_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @bhvi_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @bhvi_flag_alias "^is.*|^should.*")
    (#not-match? @bhvi_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@lozh_flag_alias")

 )
"""
holes = ["lozh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "k9o4w_enum"
query = """
(
     (enum_entry
        (simple_identifier) @oitz_flag_alias
    ) @enum_entry

(#eq? @oitz_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "k9o4w_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @b1wr_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@oitz_flag_alias")

 )
"""
holes = ["oitz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "k9o4w_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @w66h_flag_alias
                )
            )
            (simple_identifier) @w66h_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @w66h_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @w66h_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@b1wr_flag_alias")

 )
"""
holes = ["b1wr_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "swued_enum"
query = """
(
     (enum_entry
        (simple_identifier) @gyhi_flag_alias
    ) @enum_entry

(#eq? @gyhi_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "swued_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @ovfa_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@gyhi_flag_alias")

 )
"""
holes = ["gyhi_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "swued_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @uacd_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@ovfa_flag_alias")

 )
"""
holes = ["ovfa_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "swued_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @qj7y_flag_alias
                )
            )
            (simple_identifier) @qj7y_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @qj7y_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@uacd_flag_alias")

 )
"""
holes = ["uacd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "ddcjn_enum"
query = """
(
     (enum_entry
        (simple_identifier) @lp3k_flag_alias
    ) @enum_entry

(#eq? @lp3k_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ddcjn_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @xbza_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@lp3k_flag_alias")

 )
"""
holes = ["lp3k_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ddcjn_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @q3lt_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@xbza_flag_alias")

 )
"""
holes = ["xbza_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ddcjn_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @m0me_flag_alias
                )
            )
            (simple_identifier) @m0me_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @m0me_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @m0me_flag_alias "^is.*|^should.*")
    (#not-match? @m0me_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@q3lt_flag_alias")

 )
"""
holes = ["q3lt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "rpqaz_enum"
query = """
(
     (enum_entry
        (simple_identifier) @urx2_flag_alias
    ) @enum_entry

(#eq? @urx2_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "rpqaz_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @csdo_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@urx2_flag_alias")

 )
"""
holes = ["urx2_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "rpqaz_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @i1mz_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@csdo_flag_alias")

 )
"""
holes = ["csdo_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "rpqaz_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @fque_flag_alias
                )
            )
            (simple_identifier) @fque_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @fque_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @fque_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@i1mz_flag_alias")

 )
"""
holes = ["i1mz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "yr4vd_enum"
query = """
(
     (enum_entry
        (simple_identifier) @hwcw_flag_alias
    ) @enum_entry

(#eq? @hwcw_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "yr4vd_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @h7lo_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@hwcw_flag_alias")

 )
"""
holes = ["hwcw_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "yr4vd_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @zpyy_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@h7lo_flag_alias")

 )
"""
holes = ["h7lo_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "thadc_enum"
query = """
(
     (enum_entry
        (simple_identifier) @nz9y_flag_alias
    ) @enum_entry

(#eq? @nz9y_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "thadc_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @khmt_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@nz9y_flag_alias")

 )
"""
holes = ["nz9y_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "thadc_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@khmt_flag_alias")

 )
"""
holes = ["khmt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "o3dw4_enum"
query = """
(
     (enum_entry
        (simple_identifier) @mgfq_flag_alias
    ) @enum_entry

(#eq? @mgfq_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "o3dw4_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @dezu_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@mgfq_flag_alias")

 )
"""
holes = ["mgfq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "o3dw4_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @o8jw_flag_alias
                )
            )
            (simple_identifier) @o8jw_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @o8jw_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@dezu_flag_alias")

 )
"""
holes = ["dezu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "mgcmb_enum"
query = """
(
     (enum_entry
        (simple_identifier) @ca8j_flag_alias
    ) @enum_entry

(#eq? @ca8j_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "mgcmb_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @uurm_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@ca8j_flag_alias")

 )
"""
holes = ["ca8j_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "sd0yk_enum"
query = """
(
     (enum_entry
        (simple_identifier) @vbrc_flag_alias
    ) @enum_entry

(#eq? @vbrc_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "sd0yk_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @trt3_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @trt3_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@vbrc_flag_alias")

 )
"""
holes = ["vbrc_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "sd0yk_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @cguf_flag_alias
                )
            )
            (simple_identifier) @cguf_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @cguf_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@trt3_flag_alias")

 )
"""
holes = ["trt3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "y6adq_enum"
query = """
(
     (enum_entry
        (simple_identifier) @itq6_flag_alias
    ) @enum_entry

(#eq? @itq6_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "y6adq_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @iwzo_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @iwzo_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@itq6_flag_alias")

 )
"""
holes = ["itq6_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "y6adq_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@iwzo_flag_alias")

 )
"""
holes = ["iwzo_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "ppd8l_enum"
query = """
(
     (enum_entry
        (simple_identifier) @b3v8_flag_alias
    ) @enum_entry

(#eq? @b3v8_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ppd8l_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @vg0z_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @vg0z_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@b3v8_flag_alias")

 )
"""
holes = ["b3v8_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ppd8l_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@vg0z_flag_alias")

 )
"""
holes = ["vg0z_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "w6ppe_enum"
query = """
(
     (enum_entry
        (simple_identifier) @hk0f_flag_alias
    ) @enum_entry

(#eq? @hk0f_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "w6ppe_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @aakk_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @aakk_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@hk0f_flag_alias")

 )
"""
holes = ["hk0f_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "ws7ht_enum"
query = """
(
     (enum_entry
        (simple_identifier) @kn5m_flag_alias
    ) @enum_entry

(#eq? @kn5m_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ws7ht_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @yrtl_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@kn5m_flag_alias")

 )
"""
holes = ["kn5m_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ws7ht_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @nlme_flag_alias
                )
            )
            (simple_identifier) @nlme_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @nlme_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@yrtl_flag_alias")

 )
"""
holes = ["yrtl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "x1h5f_enum"
query = """
(
     (enum_entry
        (simple_identifier) @xzhf_flag_alias
    ) @enum_entry

(#eq? @xzhf_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "x1h5f_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @lwmo_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@xzhf_flag_alias")

 )
"""
holes = ["xzhf_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "x1h5f_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @h32u_flag_alias
                )
            )
            (simple_identifier) @h32u_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @h32u_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @h32u_flag_alias "^is.*|^should.*")
    (#not-match? @h32u_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@lwmo_flag_alias")

 )
"""
holes = ["lwmo_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "l9kgz_enum"
query = """
(
     (enum_entry
        (simple_identifier) @s4hh_flag_alias
    ) @enum_entry

(#eq? @s4hh_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "l9kgz_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @yli2_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@s4hh_flag_alias")

 )
"""
holes = ["s4hh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "l9kgz_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @lh4u_flag_alias
                )
            )
            (simple_identifier) @lh4u_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @lh4u_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @lh4u_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@yli2_flag_alias")

 )
"""
holes = ["yli2_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "jm6kk_enum"
query = """
(
     (enum_entry
        (simple_identifier) @n5ra_flag_alias
    ) @enum_entry

(#eq? @n5ra_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jm6kk_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @aiqz_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@n5ra_flag_alias")

 )
"""
holes = ["n5ra_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "zxcgr_enum"
query = """
(
     (enum_entry
        (simple_identifier) @rpaz_flag_alias
    ) @enum_entry

(#eq? @rpaz_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "zxcgr_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @agnn_flag_alias
                )
            )
            (simple_identifier) @agnn_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @agnn_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@rpaz_flag_alias")

 )
"""
holes = ["rpaz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "ozvwy_enum"
query = """
(
     (enum_entry
        (simple_identifier) @ypu4_flag_alias
    ) @enum_entry

(#eq? @ypu4_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ozvwy_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@ypu4_flag_alias")

 )
"""
holes = ["ypu4_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "rimqp_enum"
query = """
(
     (enum_entry
        (simple_identifier) @qrjj_flag_alias
    ) @enum_entry

(#eq? @qrjj_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "xc57b_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @uleh_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @uleh_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xc57b_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @xewl_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @xewl_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@uleh_flag_alias")

 )
"""
holes = ["uleh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "xc57b_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @axcm_flag_alias
                )
            )
            (simple_identifier) @axcm_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @axcm_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@xewl_flag_alias")

 )
"""
holes = ["xewl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "kmezr_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @rbyq_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @rbyq_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "kmezr_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ctzk_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ctzk_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@rbyq_flag_alias")

 )
"""
holes = ["rbyq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "kmezr_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ctzk_flag_alias")

 )
"""
holes = ["ctzk_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "azqrl_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @edce_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @edce_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "azqrl_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @gxlp_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @gxlp_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@edce_flag_alias")

 )
"""
holes = ["edce_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "azqrl_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@gxlp_flag_alias")

 )
"""
holes = ["gxlp_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "zwucn_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @eqki_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @eqki_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "zwucn_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ubec_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ubec_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@eqki_flag_alias")

 )
"""
holes = ["eqki_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "dw13u_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @ydpt_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @ydpt_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dw13u_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @uplu_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@ydpt_flag_alias")

 )
"""
holes = ["ydpt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "dw13u_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @yd9j_flag_alias
                )
            )
            (simple_identifier) @yd9j_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @yd9j_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@uplu_flag_alias")

 )
"""
holes = ["uplu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "up63u_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @pqtr_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @pqtr_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "up63u_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @iskc_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@pqtr_flag_alias")

 )
"""
holes = ["pqtr_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "up63u_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @loop_flag_alias
                )
            )
            (simple_identifier) @loop_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @loop_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @loop_flag_alias "^is.*|^should.*")
    (#not-match? @loop_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@iskc_flag_alias")

 )
"""
holes = ["iskc_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "iztpd_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @paid_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @paid_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "iztpd_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @sdco_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@paid_flag_alias")

 )
"""
holes = ["paid_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "iztpd_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @jd0t_flag_alias
                )
            )
            (simple_identifier) @jd0t_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @jd0t_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @jd0t_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@sdco_flag_alias")

 )
"""
holes = ["sdco_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "klqrb_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @xkty_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @xkty_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "klqrb_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @kycl_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@xkty_flag_alias")

 )
"""
holes = ["xkty_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "rmjvf_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @nrgk_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @nrgk_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "rmjvf_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @fx0e_flag_alias
                )
            )
            (simple_identifier) @fx0e_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @fx0e_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@nrgk_flag_alias")

 )
"""
holes = ["nrgk_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "tsrr1_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @ylco_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @ylco_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tsrr1_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@ylco_flag_alias")

 )
"""
holes = ["ylco_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "yeltr_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @o4lj_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @o4lj_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "object_declaration"
replace = ""
