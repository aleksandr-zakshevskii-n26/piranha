[[rules]]
name = "laiu1_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @xccs_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "laiu1_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @zdzd_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @zdzd_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@xccs_flag_alias")

 )
"""
holes = ["xccs_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "laiu1_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @sd2v_flag_alias
                )
            )
            (simple_identifier) @sd2v_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @sd2v_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@zdzd_flag_alias")

 )
"""
holes = ["zdzd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "t7czz_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @j7ry_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "t7czz_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @oein_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @oein_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@j7ry_flag_alias")

 )
"""
holes = ["j7ry_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "t7czz_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@oein_flag_alias")

 )
"""
holes = ["oein_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "gqg0l_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @ci7f_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "gqg0l_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @llxt_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @llxt_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@ci7f_flag_alias")

 )
"""
holes = ["ci7f_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "gqg0l_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@llxt_flag_alias")

 )
"""
holes = ["llxt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "mj7yz_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @vkou_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "mj7yz_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @bfur_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @bfur_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@vkou_flag_alias")

 )
"""
holes = ["vkou_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "zk98i_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @rbkd_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "zk98i_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @edlp_flag_alias
                )
            )
            (simple_identifier) @edlp_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @edlp_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@rbkd_flag_alias")

 )
"""
holes = ["rbkd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "acjjd_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @hq06_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "acjjd_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @tzv7_flag_alias
                )
            )
            (simple_identifier) @tzv7_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @tzv7_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @tzv7_flag_alias "^is.*|^should.*")
    (#not-match? @tzv7_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@hq06_flag_alias")

 )
"""
holes = ["hq06_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "yor41_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @xin7_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "yor41_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ig1h_flag_alias
                )
            )
            (simple_identifier) @ig1h_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ig1h_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @ig1h_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@xin7_flag_alias")

 )
"""
holes = ["xin7_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "dahox_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @ul1n_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dahox_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @qfal_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@ul1n_flag_alias")

 )
"""
holes = ["ul1n_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "dahox_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @n9zs_flag_alias
                )
            )
            (simple_identifier) @n9zs_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @n9zs_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@qfal_flag_alias")

 )
"""
holes = ["qfal_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "eboe6_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @rlz3_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "eboe6_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @zsra_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@rlz3_flag_alias")

 )
"""
holes = ["rlz3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "eboe6_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @rrpi_flag_alias
                )
            )
            (simple_identifier) @rrpi_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @rrpi_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @rrpi_flag_alias "^is.*|^should.*")
    (#not-match? @rrpi_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@zsra_flag_alias")

 )
"""
holes = ["zsra_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "fdsu0_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @pqjz_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "fdsu0_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @igdj_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@pqjz_flag_alias")

 )
"""
holes = ["pqjz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "fdsu0_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @qa9n_flag_alias
                )
            )
            (simple_identifier) @qa9n_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @qa9n_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @qa9n_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@igdj_flag_alias")

 )
"""
holes = ["igdj_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "eh7hu_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @zp3v_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "eh7hu_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @dbte_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@zp3v_flag_alias")

 )
"""
holes = ["zp3v_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "tur9h_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @twhq_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tur9h_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@twhq_flag_alias")

 )
"""
holes = ["twhq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "cvv1q_enum_parameterized__literal"
query = """
(
     (enum_entry
    (simple_identifier) @whmb_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ))
) @enum_entry

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "wdla5_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @fga6_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "wdla5_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @cjtn_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @cjtn_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@fga6_flag_alias")

 )
"""
holes = ["fga6_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "wdla5_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @xse4_flag_alias
                )
            )
            (simple_identifier) @xse4_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @xse4_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@cjtn_flag_alias")

 )
"""
holes = ["cjtn_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "x7cuh_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @bjz1_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "x7cuh_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @o9qf_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @o9qf_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@bjz1_flag_alias")

 )
"""
holes = ["bjz1_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "x7cuh_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@o9qf_flag_alias")

 )
"""
holes = ["o9qf_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "o6qdl_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @vvd0_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "o6qdl_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @zlyh_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @zlyh_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@vvd0_flag_alias")

 )
"""
holes = ["vvd0_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "o6qdl_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@zlyh_flag_alias")

 )
"""
holes = ["zlyh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "ju10c_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @nxp2_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ju10c_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @vln8_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @vln8_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@nxp2_flag_alias")

 )
"""
holes = ["nxp2_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "yefcz_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @ofsy_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "yefcz_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ynsl_flag_alias
                )
            )
            (simple_identifier) @ynsl_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ynsl_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ofsy_flag_alias")

 )
"""
holes = ["ofsy_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "xqzd6_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @v2pj_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xqzd6_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @wosl_flag_alias
                )
            )
            (simple_identifier) @wosl_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @wosl_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @wosl_flag_alias "^is.*|^should.*")
    (#not-match? @wosl_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@v2pj_flag_alias")

 )
"""
holes = ["v2pj_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "jgqtd_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @yd6a_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jgqtd_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ypan_flag_alias
                )
            )
            (simple_identifier) @ypan_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ypan_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @ypan_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@yd6a_flag_alias")

 )
"""
holes = ["yd6a_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "q20ky_property__literal"
query = """
(
     (companion_object
        (class_body
            (property_declaration
                (modifiers (_))
                (variable_declaration
                    (simple_identifier) @cuio_flag_alias
                )
                [
                        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

                ]
            ) @property_declaration
        )
    )

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "property_declaration"
replace = ""

[[rules]]
name = "ucrbi_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @pnca_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @pnca_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ucrbi_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @bamg_flag_alias
                )
            )
            (simple_identifier) @bamg_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @bamg_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@pnca_flag_alias")

 )
"""
holes = ["pnca_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "c7xme_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @pzlx_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @pzlx_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "c7xme_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@pzlx_flag_alias")

 )
"""
holes = ["pzlx_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "rmv4d_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @jthq_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @jthq_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "rmv4d_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@jthq_flag_alias")

 )
"""
holes = ["jthq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "niosy_lambda__literal"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @h0iw_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @h0iw_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "mj7ju_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @nj8s_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "mj7ju_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @hj3m_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @hj3m_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@nj8s_flag_alias")

 )
"""
holes = ["nj8s_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "mj7ju_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @c793_flag_alias
                )
            )
            (simple_identifier) @c793_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @c793_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@hj3m_flag_alias")

 )
"""
holes = ["hj3m_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "wlxut_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @yyws_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "wlxut_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ikbd_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ikbd_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@yyws_flag_alias")

 )
"""
holes = ["yyws_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "wlxut_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ikbd_flag_alias")

 )
"""
holes = ["ikbd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "f4mru_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @xsy5_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "f4mru_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @lqfe_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @lqfe_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@xsy5_flag_alias")

 )
"""
holes = ["xsy5_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "f4mru_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@lqfe_flag_alias")

 )
"""
holes = ["lqfe_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "sl1yf_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @tvh1_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "sl1yf_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @vkxm_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @vkxm_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@tvh1_flag_alias")

 )
"""
holes = ["tvh1_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "nkb63_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @fcbi_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "nkb63_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @digr_flag_alias
                )
            )
            (simple_identifier) @digr_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @digr_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@fcbi_flag_alias")

 )
"""
holes = ["fcbi_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "we7ad_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @hvab_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "we7ad_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @navm_flag_alias
                )
            )
            (simple_identifier) @navm_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @navm_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @navm_flag_alias "^is.*|^should.*")
    (#not-match? @navm_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@hvab_flag_alias")

 )
"""
holes = ["hvab_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "xxqsf_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @aaxh_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xxqsf_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @pm3y_flag_alias
                )
            )
            (simple_identifier) @pm3y_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @pm3y_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @pm3y_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@aaxh_flag_alias")

 )
"""
holes = ["aaxh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "t3zdf_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @khyu_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "t3zdf_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@khyu_flag_alias")

 )
"""
holes = ["khyu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "cqvz2_sealed_class_parameterized__literal"
query = """
(
     (object_declaration
   (type_identifier) @qjt7_flag_alias
   (delegation_specifier
   	  (constructor_invocation
      	 (user_type
        	 (type_identifier)
         )
         (value_arguments
        	 (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

             ])
         )
      )
   )
) @object_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "object_declaration"
replace = ""

[[rules]]
name = "tseln_expression_invocation_positive__literal"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ot5p_flag_alias
                )
            )
            (simple_identifier) @ot5p_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) @ot5p_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @ot5p_flag_alias "^is.*|^should.*")
    (#not-match? @ot5p_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "ge6ly_expression_invocation_negative__literal"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @zgrk_flag_alias
                )
            )
            (simple_identifier) @zgrk_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

            ]
            (navigation_suffix
                (simple_identifier) @zgrk_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @zgrk_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "i1hms_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @zfrn_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "i1hms_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ubbn_flag_alias
                )
            )
            (simple_identifier) @ubbn_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ubbn_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@zfrn_flag_alias")

 )
"""
holes = ["zfrn_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "f5cwb_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @wnaq_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "f5cwb_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @bhl7_flag_alias
                )
            )
            (simple_identifier) @bhl7_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @bhl7_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @bhl7_flag_alias "^is.*|^should.*")
    (#not-match? @bhl7_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@wnaq_flag_alias")

 )
"""
holes = ["wnaq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "oxhyc_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @bhs5_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "oxhyc_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @txh0_flag_alias
                )
            )
            (simple_identifier) @txh0_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @txh0_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @txh0_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@bhs5_flag_alias")

 )
"""
holes = ["bhs5_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "fnbud_variable__literal"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @d9s4_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                (string_literal) @flag_name
            ])
        ))
    )
    (string_literal) @flag_name

        ]
    ) @variable_declaration

(#eq? @flag_name "\\\"@stale_flag_name\\\"")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "velr0_enum"
query = """
(
     (enum_entry
        (simple_identifier) @ksws_flag_alias
    ) @enum_entry

(#eq? @ksws_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "velr0_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @f50n_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@ksws_flag_alias")

 )
"""
holes = ["ksws_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "velr0_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @fdrb_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @fdrb_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@f50n_flag_alias")

 )
"""
holes = ["f50n_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "velr0_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @jibz_flag_alias
                )
            )
            (simple_identifier) @jibz_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @jibz_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@fdrb_flag_alias")

 )
"""
holes = ["fdrb_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "jr4er_enum"
query = """
(
     (enum_entry
        (simple_identifier) @qjvq_flag_alias
    ) @enum_entry

(#eq? @qjvq_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jr4er_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @x5gr_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@qjvq_flag_alias")

 )
"""
holes = ["qjvq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "jr4er_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @e0t3_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @e0t3_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@x5gr_flag_alias")

 )
"""
holes = ["x5gr_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "jr4er_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@e0t3_flag_alias")

 )
"""
holes = ["e0t3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "oofya_enum"
query = """
(
     (enum_entry
        (simple_identifier) @eka5_flag_alias
    ) @enum_entry

(#eq? @eka5_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "oofya_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @mqsl_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@eka5_flag_alias")

 )
"""
holes = ["eka5_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "oofya_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @dbbz_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @dbbz_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@mqsl_flag_alias")

 )
"""
holes = ["mqsl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "oofya_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@dbbz_flag_alias")

 )
"""
holes = ["dbbz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "p09ui_enum"
query = """
(
     (enum_entry
        (simple_identifier) @bpsx_flag_alias
    ) @enum_entry

(#eq? @bpsx_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "p09ui_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @pwsp_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@bpsx_flag_alias")

 )
"""
holes = ["bpsx_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "p09ui_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @q1c4_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @q1c4_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@pwsp_flag_alias")

 )
"""
holes = ["pwsp_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "fb1re_enum"
query = """
(
     (enum_entry
        (simple_identifier) @bc3p_flag_alias
    ) @enum_entry

(#eq? @bc3p_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "fb1re_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @fdlc_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@bc3p_flag_alias")

 )
"""
holes = ["bc3p_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "fb1re_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @rlwl_flag_alias
                )
            )
            (simple_identifier) @rlwl_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @rlwl_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@fdlc_flag_alias")

 )
"""
holes = ["fdlc_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "ax6v5_enum"
query = """
(
     (enum_entry
        (simple_identifier) @giyw_flag_alias
    ) @enum_entry

(#eq? @giyw_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "ax6v5_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @ydzi_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@giyw_flag_alias")

 )
"""
holes = ["giyw_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "ax6v5_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @ew0x_flag_alias
                )
            )
            (simple_identifier) @ew0x_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @ew0x_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @ew0x_flag_alias "^is.*|^should.*")
    (#not-match? @ew0x_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ydzi_flag_alias")

 )
"""
holes = ["ydzi_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "d0e5s_enum"
query = """
(
     (enum_entry
        (simple_identifier) @sizd_flag_alias
    ) @enum_entry

(#eq? @sizd_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "d0e5s_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @q0dq_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@sizd_flag_alias")

 )
"""
holes = ["sizd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "d0e5s_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @daen_flag_alias
                )
            )
            (simple_identifier) @daen_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @daen_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @daen_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@q0dq_flag_alias")

 )
"""
holes = ["q0dq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "v5gea_enum"
query = """
(
     (enum_entry
        (simple_identifier) @bqjq_flag_alias
    ) @enum_entry

(#eq? @bqjq_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "v5gea_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @wcdt_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@bqjq_flag_alias")

 )
"""
holes = ["bqjq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "v5gea_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ezxl_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@wcdt_flag_alias")

 )
"""
holes = ["wcdt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "v5gea_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @gzum_flag_alias
                )
            )
            (simple_identifier) @gzum_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @gzum_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ezxl_flag_alias")

 )
"""
holes = ["ezxl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "dkzk9_enum"
query = """
(
     (enum_entry
        (simple_identifier) @drb3_flag_alias
    ) @enum_entry

(#eq? @drb3_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dkzk9_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @f8tk_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@drb3_flag_alias")

 )
"""
holes = ["drb3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "dkzk9_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @xnge_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@f8tk_flag_alias")

 )
"""
holes = ["f8tk_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "dkzk9_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @hzia_flag_alias
                )
            )
            (simple_identifier) @hzia_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @hzia_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @hzia_flag_alias "^is.*|^should.*")
    (#not-match? @hzia_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@xnge_flag_alias")

 )
"""
holes = ["xnge_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "y1ca9_enum"
query = """
(
     (enum_entry
        (simple_identifier) @li3g_flag_alias
    ) @enum_entry

(#eq? @li3g_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "y1ca9_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @rlxh_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@li3g_flag_alias")

 )
"""
holes = ["li3g_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "y1ca9_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ih9l_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@rlxh_flag_alias")

 )
"""
holes = ["rlxh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "y1ca9_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @z9aq_flag_alias
                )
            )
            (simple_identifier) @z9aq_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @z9aq_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @z9aq_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ih9l_flag_alias")

 )
"""
holes = ["ih9l_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "wygnb_enum"
query = """
(
     (enum_entry
        (simple_identifier) @hnsf_flag_alias
    ) @enum_entry

(#eq? @hnsf_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "wygnb_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @gmji_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@hnsf_flag_alias")

 )
"""
holes = ["hnsf_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "wygnb_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @spwn_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@gmji_flag_alias")

 )
"""
holes = ["gmji_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "k4mqz_enum"
query = """
(
     (enum_entry
        (simple_identifier) @pfvg_flag_alias
    ) @enum_entry

(#eq? @pfvg_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "k4mqz_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @xwc3_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@pfvg_flag_alias")

 )
"""
holes = ["pfvg_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "k4mqz_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@xwc3_flag_alias")

 )
"""
holes = ["xwc3_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "dxils_enum"
query = """
(
     (enum_entry
        (simple_identifier) @aw0o_flag_alias
    ) @enum_entry

(#eq? @aw0o_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dxils_enum_parameterized"
query = """
(
     (enum_entry
    (simple_identifier) @tn5p_flag_alias
    (value_arguments
    	(value_argument [
    	        (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ))
) @enum_entry

(#eq? @flag_name "@aw0o_flag_alias")

 )
"""
holes = ["aw0o_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "tcjqy_enum"
query = """
(
     (enum_entry
        (simple_identifier) @gbmx_flag_alias
    ) @enum_entry

(#eq? @gbmx_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tcjqy_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @voy1_flag_alias
                )
            )
            (simple_identifier) @voy1_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @voy1_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@gbmx_flag_alias")

 )
"""
holes = ["gbmx_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "cmiza_enum"
query = """
(
     (enum_entry
        (simple_identifier) @sgyq_flag_alias
    ) @enum_entry

(#eq? @sgyq_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "cmiza_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @ilbc_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @ilbc_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@sgyq_flag_alias")

 )
"""
holes = ["sgyq_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "cmiza_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @yxfh_flag_alias
                )
            )
            (simple_identifier) @yxfh_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @yxfh_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ilbc_flag_alias")

 )
"""
holes = ["ilbc_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "p9zh8_enum"
query = """
(
     (enum_entry
        (simple_identifier) @h43m_flag_alias
    ) @enum_entry

(#eq? @h43m_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "p9zh8_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @xev0_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @xev0_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@h43m_flag_alias")

 )
"""
holes = ["h43m_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "p9zh8_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@xev0_flag_alias")

 )
"""
holes = ["xev0_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "qcr5o_enum"
query = """
(
     (enum_entry
        (simple_identifier) @i0be_flag_alias
    ) @enum_entry

(#eq? @i0be_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "qcr5o_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @w7nx_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @w7nx_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@i0be_flag_alias")

 )
"""
holes = ["i0be_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "qcr5o_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@w7nx_flag_alias")

 )
"""
holes = ["w7nx_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "sojex_enum"
query = """
(
     (enum_entry
        (simple_identifier) @admz_flag_alias
    ) @enum_entry

(#eq? @admz_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "sojex_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @uqbs_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @uqbs_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@admz_flag_alias")

 )
"""
holes = ["admz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "tmhih_enum"
query = """
(
     (enum_entry
        (simple_identifier) @mcoz_flag_alias
    ) @enum_entry

(#eq? @mcoz_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tmhih_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @gjqd_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@mcoz_flag_alias")

 )
"""
holes = ["mcoz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "tmhih_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @nf4t_flag_alias
                )
            )
            (simple_identifier) @nf4t_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @nf4t_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@gjqd_flag_alias")

 )
"""
holes = ["gjqd_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "fueka_enum"
query = """
(
     (enum_entry
        (simple_identifier) @a2yz_flag_alias
    ) @enum_entry

(#eq? @a2yz_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "fueka_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ftyh_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@a2yz_flag_alias")

 )
"""
holes = ["a2yz_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "fueka_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @zn8t_flag_alias
                )
            )
            (simple_identifier) @zn8t_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @zn8t_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @zn8t_flag_alias "^is.*|^should.*")
    (#not-match? @zn8t_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@ftyh_flag_alias")

 )
"""
holes = ["ftyh_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "jkbm6_enum"
query = """
(
     (enum_entry
        (simple_identifier) @xour_flag_alias
    ) @enum_entry

(#eq? @xour_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "jkbm6_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @xfkj_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@xour_flag_alias")

 )
"""
holes = ["xour_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "jkbm6_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @j20e_flag_alias
                )
            )
            (simple_identifier) @j20e_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @j20e_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @j20e_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@xfkj_flag_alias")

 )
"""
holes = ["xfkj_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "f7cnc_enum"
query = """
(
     (enum_entry
        (simple_identifier) @te0i_flag_alias
    ) @enum_entry

(#eq? @te0i_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "f7cnc_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @giyx_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@te0i_flag_alias")

 )
"""
holes = ["te0i_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "dgmkx_enum"
query = """
(
     (enum_entry
        (simple_identifier) @ediy_flag_alias
    ) @enum_entry

(#eq? @ediy_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dgmkx_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@ediy_flag_alias")

 )
"""
holes = ["ediy_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "vulae_enum"
query = """
(
     (enum_entry
        (simple_identifier) @g5pm_flag_alias
    ) @enum_entry

(#eq? @g5pm_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "enum_entry"
replace = ""

[[rules]]
name = "szrh2_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @bic1_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @bic1_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "szrh2_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @bqge_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @bqge_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@bic1_flag_alias")

 )
"""
holes = ["bic1_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "szrh2_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @jjfr_flag_alias
                )
            )
            (simple_identifier) @jjfr_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @jjfr_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@bqge_flag_alias")

 )
"""
holes = ["bqge_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "xsh9e_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @czop_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @czop_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xsh9e_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @smqt_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @smqt_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@czop_flag_alias")

 )
"""
holes = ["czop_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "xsh9e_lambda_invocation_positive"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^is.*|^should.*")
    (#not-match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@smqt_flag_alias")

 )
"""
holes = ["smqt_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "wx0ns_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @rusu_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @rusu_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "wx0ns_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @fpkl_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @fpkl_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@rusu_flag_alias")

 )
"""
holes = ["rusu_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "wx0ns_lambda_invocation_negative"
query = """
(
         (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

    (#match? @flag_name "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@fpkl_flag_alias")

 )
"""
holes = ["fpkl_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "o0dnu_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @liva_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @liva_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "o0dnu_lambda"
query = """
(
     [
        (
            (function_declaration
    (simple_identifier) @q66w_flag_alias
    (function_body
        (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) 
                )
            )
            (simple_identifier) 
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
    )
) @function_declaration
        )
        (
            (function_declaration
    (simple_identifier) @q66w_flag_alias
    (function_body
        (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) 
            )
        )
        (call_suffix)
    ) @call_expression
    )
) @function_declaration
        )
    ]

(#eq? @flag_name "@liva_flag_alias")

 )
"""
holes = ["liva_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "function_declaration"
replace = ""

[[rules]]
name = "xuhrh_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @uob6_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @uob6_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "xuhrh_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @ndfk_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@uob6_flag_alias")

 )
"""
holes = ["uob6_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "xuhrh_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @mk4n_flag_alias
                )
            )
            (simple_identifier) @mk4n_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @mk4n_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@ndfk_flag_alias")

 )
"""
holes = ["ndfk_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "nutjb_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @rxxb_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @rxxb_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "nutjb_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @jmrr_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@rxxb_flag_alias")

 )
"""
holes = ["rxxb_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "nutjb_expression_invocation_positive"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @b4c4_flag_alias
                )
            )
            (simple_identifier) @b4c4_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @b4c4_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @b4c4_flag_alias "^is.*|^should.*")
    (#not-match? @b4c4_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@jmrr_flag_alias")

 )
"""
holes = ["jmrr_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@treated"

[[rules]]
name = "tvnhd_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @cdr1_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @cdr1_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "tvnhd_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @vv2v_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@cdr1_flag_alias")

 )
"""
holes = ["cdr1_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false


[[rules]]
name = "tvnhd_expression_invocation_negative"
query = """
(
     [
        (
            (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @uzl0_flag_alias
                )
            )
            (simple_identifier) @uzl0_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
        )
        (
            (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @uzl0_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
        )
    ]

    (#match? @uzl0_flag_alias "^isNot.*|^shouldNot.*")

(#eq? @flag_name "@vv2v_flag_alias")

 )
"""
holes = ["vv2v_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "call_expression"
replace = "@untreated"

[[rules]]
name = "dz4vb_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @rkcv_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @rkcv_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "dz4vb_variable"
query = """
(
     (property_declaration
        (variable_declaration
            (simple_identifier) @wosw_flag_alias
        )
        [
                (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


        ]
    ) @variable_declaration

(#eq? @flag_name "@rkcv_flag_alias")

 )
"""
holes = ["rkcv_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "variable_declaration"
replace = ""

[[rules]]
name = "mc8ur_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @pghv_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @pghv_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "mc8ur_infix_expression"
query = """
(
     (infix_expression
        (call_expression
            (simple_identifier)
            (call_suffix
                (annotated_lambda
                    (lambda_literal
                        (statements
                            [
                                (
                                    (call_expression
        [
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @hv5a_flag_alias
                )
            )
            (simple_identifier) @hv5a_flag_alias
        ]
        (call_suffix (value_arguments
            (value_argument [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ])
        ))
    ) @call_expression
                                )
                                (
                                    (call_expression
        (navigation_expression
            [
                    (call_expression
        (call_suffix (value_arguments
            (value_argument [
                    (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name

            ])
        ))
    )
        (simple_identifier) @flag_name
    (navigation_expression(
      (navigation_expression(
          (navigation_suffix (
              (simple_identifier) @flag_name
          ))
      ))
    ))
    (navigation_expression(
      (navigation_suffix (
          (simple_identifier) @flag_name
      ))
    ))
    (navigation_expression(
      (simple_identifier) @flag_name
    ))
    (simple_identifier) @flag_name


            ]
            (navigation_suffix
                (simple_identifier) @hv5a_flag_alias
            )
        )
        (call_suffix)
    ) @call_expression
                                )
                                (
                                        (call_expression
        [
            (simple_identifier) @flag_name
            (navigation_expression
                (simple_identifier)
                (navigation_suffix
                    (simple_identifier) @flag_name
                )
            )
            (simple_identifier) @flag_name
        ]
        (call_suffix (_))
    ) @call_expression

                                )
                            ]
                        )
                    )
                )
            )
        )
        (simple_identifier)
        (boolean_literal)
    ) @infix_expression

(#eq? @flag_name "@pghv_flag_alias")

 )
"""
holes = ["pghv_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
groups = ["replace_expression_with_boolean_literal"]
replace_node = "infix_expression"
replace = ""

[[rules]]
name = "obaih_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @geby_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @geby_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]


[[rules]]
name = "obaih_import"
query = """
(
     (import_header
        (identifier
            (simple_identifier) @flag_name
        )
    ) @import_header

(#eq? @flag_name "@geby_flag_alias")

 )
"""
holes = ["geby_flag_alias", "treated", "untreated", "stale_flag_name"]
is_seed_rule = false
replace_node = "import_header"
replace = ""

[[rules]]
name = "twr4s_sealed_class"
query = """
(
     (object_declaration
        (type_identifier) @hqw5_flag_alias
        (delegation_specifier
            (user_type
                (type_identifier)
            )
        )
    ) @object_declaration

(#eq? @hqw5_flag_alias "@stale_flag_name")

 )
"""
holes = ["treated", "untreated", "stale_flag_name"]
replace_node = "object_declaration"
replace = ""
